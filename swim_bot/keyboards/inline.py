from aiogram.utils.keyboard import InlineKeyboardBuilder


def main_menu_inline_keyboard():
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É', callback_data='choose_pool_type_state')
    keyboard_builder.button(text='–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏', callback_data='booking_delete')
    keyboard_builder.button(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏', callback_data='training_info')
    keyboard_builder.button(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='balance_view')
    keyboard_builder.button(text='–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='balance_update')
    keyboard_builder.button(text='–ü—Ä–∏–≤—è–∑–∞—Ç—å –Ω–æ–≤–æ–≥–æ —Ä–µ–±–µ–Ω–∫–∞', callback_data='add_child_remote')
    keyboard_builder.button(text='–û—Ç–≤—è–∑–∞—Ç—å —Ä–µ–±–µ–Ω–∫–∞', callback_data='child_delete')
    keyboard_builder.button(text='–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç—Ä–µ–Ω–µ—Ä–∞—Ö', callback_data='trainer_info')
    keyboard_builder.button(text='–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –¥—Ä—É–≥–æ–≥–æ —Ä–µ–±–µ–Ω–∫–∞', callback_data='child_switch')
    keyboard_builder.adjust(1, 1, 1, 1, 1, 1, 1, 1, 1)
    return keyboard_builder.as_markup()


def update_balance_inline_keyboard():
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(text='1', callback_data='add_balance_trainings_1')
    keyboard_builder.button(text='4', callback_data='add_balance_trainings_4')
    keyboard_builder.button(text='8', callback_data='add_balance_trainings_8')
    keyboard_builder.button(text='12', callback_data='add_balance_trainings_12')
    keyboard_builder.button(text='–ù–∞–∑–∞–¥', callback_data='back')
    keyboard_builder.adjust(1, 1, 1, 1, 1)
    return keyboard_builder.as_markup()


def back_button():
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(text='–ù–∞–∑–∞–¥', callback_data='back')
    return keyboard_builder.as_markup()


def training_booking_keyboard(trainings_list):
    keyboard_builder = InlineKeyboardBuilder()
    for idx, training in enumerate(trainings_list):
        # Use compact callback data to keep under Telegram's 64-byte limit
        keyboard_builder.button(text=training, callback_data=f"tr_{idx}")
    keyboard_builder.button(text='–ù–∞–∑–∞–¥', callback_data='back')
    keyboard_builder.adjust(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
    return keyboard_builder.as_markup()


def training_booking_confirm_keyboard():
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è', callback_data='confirm_training')
    keyboard_builder.button(text='–ù–∞–∑–∞–¥', callback_data='back')
    keyboard_builder.adjust(1, 1)
    return keyboard_builder.as_markup()

def booking_accept_keyboard():
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(text='–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='back')
    return keyboard_builder.as_markup()

def booking_cancel_choose_keyboard(trainings_list):
    keyboard_builder = InlineKeyboardBuilder()
    for training in trainings_list:
        keyboard_builder.button(text=training, callback_data=training)
    keyboard_builder.button(text='–ù–∞–∑–∞–¥', callback_data='back')
    keyboard_builder.adjust(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
    return keyboard_builder.as_markup()


def booking_cancel_info_keyboard():
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(text='–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å', callback_data='booking_cancel')
    keyboard_builder.button(text='–ù–∞–∑–∞–¥', callback_data='back')
    keyboard_builder.adjust(1, 1)
    return keyboard_builder.as_markup()


def child_names_choosing_keyboard(child_list):
    keyboard_builder = InlineKeyboardBuilder()
    for child in child_list:
        keyboard_builder.button(text=child, callback_data=child)
    keyboard_builder.adjust(1, 1, 1, 1, 1)
    return keyboard_builder.as_markup()

def child_names_choosing_keyboard_with_back_button(child_list):
    keyboard_builder = InlineKeyboardBuilder()
    for child in child_list:
        keyboard_builder.button(text=child, callback_data=child)
    keyboard_builder.button(text='–ù–∞–∑–∞–¥', callback_data='back')
    keyboard_builder.adjust(1, 1, 1, 1, 1, 1, 1, 1)
    return keyboard_builder.as_markup()


def pool_type_keyboard_with_back_button():
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(text='–ë–æ–ª—å—à–æ–π –±–∞—Å—Å–µ–π–Ω üê¨', callback_data='pool_big')
    keyboard_builder.button(text='–ú–∞–ª—ã–π –±–∞—Å—Å–µ–π–Ω üê†', callback_data='pool_small')
    keyboard_builder.button(text='–õ—é–±–æ–π –±–∞—Å—Å–µ–π–Ω', callback_data='pool_any')
    keyboard_builder.button(text='–ù–∞–∑–∞–¥', callback_data='back')
    keyboard_builder.adjust(1, 1, 1, 1)
    return keyboard_builder.as_markup()


def trainer_list_keyboard_with_back_button(trainers_list):
    keyboard_builder = InlineKeyboardBuilder()
    for trainer in trainers_list:
        keyboard_builder.button(text=trainer, callback_data=f"trainer_{trainer}")
    keyboard_builder.button(text="–õ—é–±–æ–π —Ç—Ä–µ–Ω–µ—Ä", callback_data="trainer_any")
    keyboard_builder.button(text="–ù–∞–∑–∞–¥", callback_data="back")
    keyboard_builder.adjust(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
    return keyboard_builder.as_markup()


def trainer_list_for_info_keyboard_with_back_button(trainers_list):
    keyboard_builder = InlineKeyboardBuilder()
    for trainer in trainers_list:
        keyboard_builder.button(text=trainer, callback_data=f"{trainer}")
    keyboard_builder.button(text="–ù–∞–∑–∞–¥", callback_data="back")
    keyboard_builder.adjust(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
    return keyboard_builder.as_markup()
